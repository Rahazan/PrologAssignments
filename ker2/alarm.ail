prob earthquake: 1/(365.25*10).

% P(Radio Reports Earthquake | Earthquake)
radio <- earthquake & radioWhenEarthquake.
prob radioWhenEarthquake: 4999/5000.

radio <- ~earthquake & radioWhenNoEarthquake.
prob radioWhenNoEarthquake: 1/5000.


% P (Intermediate1 | Earthquake)
i1 <- earthquake & intermediate1WhenEQ.
prob intermediate1WhenEQ: 0.2.

i1 <- ~earthquake & intermediate1WhenNoEQ.
prob intermediate1WhenNoEQ: 0.

% P (Intermediate2 | Burglar)
i2 <- burglar & intermediate2WhenBurglar.
prob intermediate2WhenBurglar: 0.95.

i2 <- ~burglar & intermediate2WhenNoBurglar.
prob intermediate2WhenNoBurglar: 0.

% P(Alarm | Intermediate1, Intermediate2)
alarm <- i1 & i2 & both.
prob both: 1.
alarm <- i1 & ~i2 & only1.
prob only1: 1.
alarm <- ~i1 & i2 & only2.
prob only2: 1.
alarm <- ~i1 & ~i2 & neither.
prob neither: 0.

% P(Watson | Alarm)
watson <- alarm & watsonWhenAlarm.
prob watsonWhenAlarm: 0.8.
watson <- ~alarm & watsonWhenNoAlarm.
prob watsonWhenNoAlarm: 0.4.

% P(Gibbons | Alarm)
gibbons <- alarm & gibbonsWhenAlarm.
prob gibbonsWhenAlarm: 0.99.
gibbons <- ~alarm & gibbonsWhenNoAlarm.
prob gibbonsWhenNoAlarm: 0.04.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

needs(joe, []).
needs(william, []).
needs(jack, [joe]).
needs(averall, [jack, william]).

prob joeG:5/7.
prob williamG:5/7.
prob jackG:5/7.
prob averallG:5/7.

joe <- joeG.
william <- williamG.
jack <- jackG & joe.
averall <- averallG & jack & william.

% P(Burglars are going to any house)
burglars <- notEnoughBurglars & ~joe & ~william & ~jack & ~averall.
burglars <- notEnoughBurglars & ~joe & ~william & ~jack &  averall.
burglars <- notEnoughBurglars & ~joe & ~william &  jack & ~averall.
burglars <- enoughBurglars 	  & ~joe & ~william &  jack &  averall.
burglars <- notEnoughBurglars & ~joe &  william & ~jack & ~averall.
burglars <- enoughBurglars 		& ~joe &  william & ~jack &  averall.
burglars <- enoughBurglars		& ~joe &  william &  jack & ~averall.
burglars <- enoughBurglars 		& ~joe &  william &  jack &  averall.
burglars <- notEnoughBurglars &  joe & ~william & ~jack & ~averall.
burglars <- enoughBurglars 		&  joe & ~william & ~jack &  averall.
burglars <- enoughBurglars 		&  joe & ~william &  jack & ~averall.
burglars <- enoughBurglars 		&  joe & ~william &  jack &  averall.
burglars <- enoughBurglars 		&  joe &  william & ~jack & ~averall.
burglars <- enoughBurglars 		&  joe &  william & ~jack &  averall.
burglars <- enoughBurglars		&  joe &  william &  jack & ~averall.
burglars <- enoughBurglars		&  joe &  william &  jack &  averall.

prob enoughBurglars: 1.
prob notEnoughBurglars: 0.

%P(Burglars hit my house)
burglar <- burglars & myHouse.

prob myHouse: 3/10000.
